.section {
	color: var(--color-semantic-text-primary);
}
.root {
}
.label {
	color: var(--color-semantic-text-primary);
}
.required {
	color: var(--color-semantic-text-primary);
}
.description {
	color: var(--color-semantic-text-secondary);
}
.error {
	color: var(--color-semantic-status-error);
}
.inputWrapper {
	border: 1px solid var(--color-semantic-interactive-input-border);
	background-color: var(--color-semantic-interactive-input-background);
	border-radius: 8px;
}

.inputWrapper:focus-within {
	border-color: var(--color-semantic-interactive-input-border-focus);
	box-shadow: 0 0 0 2px var(--color-semantic-utility-focus-ring);
}

.input {
	border-radius: 8px;
	padding: 8px 10px;
	transition:
		background-color 0.2s ease,
		border-color 0.2s ease;
	border: 0;
	background-color: transparent;
	color: var(--color-semantic-text-primary);
}

.input::placeholder {
	color: var(--color-semantic-interactive-input-placeholder);
}

/* Danger Variant: For critical actions or warnings */
.inputWrapper[data-variant='danger'] {
	background-color: var(--color-semantic-status-error-light);
	color: var(--color-semantic-text-on-error);
	border: 1px solid var(--color-semantic-interactive-input-border-error);
}

.inputWrapper[data-variant='danger']:hover {
	background-color: var(--color-semantic-status-error-hover);
}

/* Default Variant: Neutral style for regular inputs */
.inputWrapper[data-variant='default'] {
	background-color: var(--color-semantic-interactive-input-background);
	color: var(--color-semantic-text-primary);
	border: 1px solid var(--color-semantic-interactive-input-border);
}

.inputWrapper[data-variant='default']:hover {
	border-color: var(--color-semantic-interactive-input-border-hover);
}

/* Disabled Variant: For inputs that are not interactive */
.inputWrapper[data-variant='disabled'] {
	background-color: var(--color-semantic-interactive-input-background-disabled);
	color: var(--color-semantic-text-disabled);
	border: 1px solid var(--color-semantic-border-light);
	cursor: not-allowed;
	opacity: 0.6;
}

.inputWrapper[data-variant='disabled']:hover {
	background-color: var(--color-semantic-interactive-input-background-disabled);
}
