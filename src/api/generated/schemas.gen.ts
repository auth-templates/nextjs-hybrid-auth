// This file is auto-generated by @hey-api/openapi-ts

export const TwoFASetupResponseSchema = {
  type: "object",
  properties: {
    qrCodeUrl: {
      type: "string",
      format: "uri",
      example:
        "otpauth://totp/MyApp:username@example.com?secret=ABCDEF123456&issuer=MyApp",
    },
    secret: {
      type: "string",
      example: "ABCDEF123456",
    },
  },
} as const;

export const Verify2FACodeRequestSchema = {
  type: "object",
  required: ["code"],
  properties: {
    code: {
      type: "string",
      example: "123456",
    },
  },
} as const;

export const Recover2FARequestSchema = {
  type: "object",
  required: ["email"],
  properties: {
    email: {
      type: "string",
      example: "user@example.com",
    },
  },
} as const;

export const ConfirmRecover2FARequestSchema = {
  type: "object",
  required: ["token"],
  properties: {
    token: {
      type: "string",
      example: "abc123def456",
    },
  },
} as const;

export const SignupRequestSchema = {
  type: "object",
  required: ["firstName", "lastName", "email", "password"],
  properties: {
    firstName: {
      type: "string",
      example: "John",
    },
    lastName: {
      type: "string",
      example: "Doe",
    },
    email: {
      type: "string",
      example: "john.doe@example.com",
    },
    password: {
      type: "string",
      example: "$SuperSecurePassword123",
    },
  },
} as const;

export const LoginRequestSchema = {
  type: "object",
  required: ["email", "password"],
  properties: {
    email: {
      type: "string",
      example: "dev@mail.com",
    },
    password: {
      type: "string",
      example: "$SuperSecurePassword45",
    },
  },
} as const;

export const VerifyTokenRequestSchema = {
  type: "object",
  required: ["token"],
  properties: {
    token: {
      type: "string",
      example: "signup-verification-token-here",
    },
  },
} as const;

export const ResetPasswordRequestSchema = {
  type: "object",
  required: ["userEmail"],
  properties: {
    userEmail: {
      type: "string",
      example: "user@example.com",
    },
  },
} as const;

export const ConfirmResetPasswordRequestSchema = {
  type: "object",
  required: ["token", "newPassword"],
  properties: {
    token: {
      type: "string",
      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
    },
    newPassword: {
      type: "string",
      example: "StrongNewPassword!2025",
    },
  },
} as const;

export const ErrorResponseSchema = {
  type: "object",
  properties: {
    message: {
      type: "string",
      example: "Internal server error",
    },
    error: {
      type: "string",
    },
  },
} as const;

export const ValidationErrorItemSchema = {
  type: "object",
  properties: {
    message: {
      type: "string",
      example: "Invalid email format",
    },
  },
} as const;

export const UserSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      example: 123,
    },
    firstName: {
      type: "string",
      example: "John",
    },
    lastName: {
      type: "string",
      example: "Doe",
    },
    email: {
      type: "string",
      format: "email",
      example: "john.doe@example.com",
    },
    role: {
      type: "string",
      example: "admin",
    },
    createdAt: {
      type: "string",
      format: "date-time",
      example: "2023-01-01T12:00:00Z",
    },
    enabled2FA: {
      type: "boolean",
      nullable: true,
      example: true,
    },
    status: {
      type: "string",
      nullable: true,
      example: "active",
    },
  },
} as const;

export const CsrfTokenResponseSchema = {
  type: "object",
  properties: {
    csrfToken: {
      type: "string",
      example: "abc123csrfTOKEN456xyz",
    },
  },
} as const;
